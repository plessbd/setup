worker_processes  1;
error_log  /usr/local/var/log/nginx/nginx_error.log debug;

events {
	worker_connections  256;
}

http {
	# Hide nginx version information.
	server_tokens off;

	# Enable Gzip compressed.
	gzip on;

	# Compression level (1-9).
	# 5 is a perfect compromise between size and cpu usage, offering about
	# 75% reduction for most ascii files (almost identical to level 9).
	gzip_comp_level    5;

	# Don't compress anything that's already small and unlikely to shrink much
	# if at all (the default is 20 bytes, which is bad as that usually leads to
	# larger files after gzipping).
	gzip_min_length    256;

	# Compress data even for clients that are connecting to us via proxies,
	# identified by the "Via" header (required for CloudFront).
	gzip_proxied       any;

	# Tell proxies to cache both the gzipped and regular version of a resource
	# whenever the client's Accept-Encoding capabilities header varies;
	# Avoids the issue where a non-gzip capable client (which is extremely rare
	# today) would display gibberish if their proxy gave them the gzipped version.
	gzip_vary          on;

	# Compress all output labeled with one of the following MIME-types.
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/ld+json
		application/manifest+json
		application/rss+xml
		application/vnd.geo+json
		application/vnd.ms-fontobject
		application/x-javascript
		application/x-web-app-manifest+json
		application/xml
		application/xhtml+xml
		application/xml+rss
		text/cache-manifest
		text/css
		text/javascript
		text/plain
		text/vcard
		text/vnd.rim.location.xloc
		text/vtt
		text/x-component
		text/x-cross-domain-policy
		text/xml;
	# text/html is always compressed by HttpGzipModule

	# This should be turned on if you are going to have pre-compressed copies (.gz) of
	# static files available. If not it should be left off as it will cause extra I/O
	# for the check. It is best if you enable this in a location{} block for
	# a specific directory, or on an individual server{} level.
	# gzip_static on;

	gzip_buffers 16 8k;
	gzip_disable "MSIE [1-6]\.(?!.*SV1)";


	# Formats to use in log files
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	log_format  json  '{'
		'"time": "$time_iso8601", '
		'"request_method": "$request_method", '
		'"request": "$request",'
		'"status": $status,'
		'"request_time": "$request_time", '
		'"remote_addr": "$remote_addr",'
		'"remote_user": "$remote_user",'
		'"body_bytes_sent": $body_bytes_sent,'
		'"http_referer": "$http_referer",'
		'"http_user_agent": "$http_user_agent",'
		'"http_x_forwarded_for": "$http_x_forwarded_for"'
	'}';

	# Define the MIME types for files.
	include       mime.types;
	default_type  application/octet-stream;

	error_log  /usr/local/var/log/nginx/http_error.log debug;
	access_log  /usr/local/var/log/nginx/access.log  json;

	# Speed up file transfers by using sendfile() to copy directly
	 # between descriptors rather than using read()/write().
	 # For performance reasons, on FreeBSD systems w/ ZFS
	 # this option should be disabled as ZFS's ARC caches
	 # frequently used files in RAM by default.
	 sendfile        on;

	# How long to allow each connection to stay idle; longer values are better
	# for each individual client, particularly for SSL, but means that worker
	# connections are tied up longer. (Default: 65)
	keepalive_timeout 65;

	index index.html index.php;
	include /usr/local/etc/nginx/sites-enabled/*;
}
